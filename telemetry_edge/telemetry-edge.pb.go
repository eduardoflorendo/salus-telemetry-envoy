// Code generated by protoc-gen-go. DO NOT EDIT.
// source: telemetry-edge.proto

/*
Package telemetry_edge is a generated protocol buffer package.

It is generated from these files:
	telemetry-edge.proto

It has these top-level messages:
	EnvoySummary
	EnvoyModifications
	ModifyEnvoyResponse
	Agent
	EnvoyInstruction
	EnvoyInstructionInstall
	EnvoyInstructionConfigure
	ConfigurationOp
	EnvoyInstructionRefresh
	KeepAliveRequest
	KeepAliveResponse
*/
package telemetry_edge

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AgentType int32

const (
	AgentType_TELEGRAF AgentType = 0
	AgentType_FILEBEAT AgentType = 1
)

var AgentType_name = map[int32]string{
	0: "TELEGRAF",
	1: "FILEBEAT",
}
var AgentType_value = map[string]int32{
	"TELEGRAF": 0,
	"FILEBEAT": 1,
}

func (x AgentType) String() string {
	return proto.EnumName(AgentType_name, int32(x))
}
func (AgentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ConfigurationOp_Type int32

const (
	ConfigurationOp_MODIFY ConfigurationOp_Type = 0
	ConfigurationOp_REMOVE ConfigurationOp_Type = 1
)

var ConfigurationOp_Type_name = map[int32]string{
	0: "MODIFY",
	1: "REMOVE",
}
var ConfigurationOp_Type_value = map[string]int32{
	"MODIFY": 0,
	"REMOVE": 1,
}

func (x ConfigurationOp_Type) String() string {
	return proto.EnumName(ConfigurationOp_Type_name, int32(x))
}
func (ConfigurationOp_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type EnvoySummary struct {
	Version         string            `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	InstanceId      string            `protobuf:"bytes,2,opt,name=instanceId" json:"instanceId,omitempty"`
	SupportedAgents []AgentType       `protobuf:"varint,3,rep,packed,name=supportedAgents,enum=AgentType" json:"supportedAgents,omitempty"`
	Labels          map[string]string `protobuf:"bytes,4,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *EnvoySummary) Reset()                    { *m = EnvoySummary{} }
func (m *EnvoySummary) String() string            { return proto.CompactTextString(m) }
func (*EnvoySummary) ProtoMessage()               {}
func (*EnvoySummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *EnvoySummary) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *EnvoySummary) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *EnvoySummary) GetSupportedAgents() []AgentType {
	if m != nil {
		return m.SupportedAgents
	}
	return nil
}

func (m *EnvoySummary) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type EnvoyModifications struct {
	InstanceId  string   `protobuf:"bytes,1,opt,name=instanceId" json:"instanceId,omitempty"`
	AddedAgents []*Agent `protobuf:"bytes,2,rep,name=addedAgents" json:"addedAgents,omitempty"`
}

func (m *EnvoyModifications) Reset()                    { *m = EnvoyModifications{} }
func (m *EnvoyModifications) String() string            { return proto.CompactTextString(m) }
func (*EnvoyModifications) ProtoMessage()               {}
func (*EnvoyModifications) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EnvoyModifications) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *EnvoyModifications) GetAddedAgents() []*Agent {
	if m != nil {
		return m.AddedAgents
	}
	return nil
}

type ModifyEnvoyResponse struct {
}

func (m *ModifyEnvoyResponse) Reset()                    { *m = ModifyEnvoyResponse{} }
func (m *ModifyEnvoyResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyEnvoyResponse) ProtoMessage()               {}
func (*ModifyEnvoyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Agent struct {
	Type    AgentType `protobuf:"varint,1,opt,name=type,enum=AgentType" json:"type,omitempty"`
	Version string    `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
}

func (m *Agent) Reset()                    { *m = Agent{} }
func (m *Agent) String() string            { return proto.CompactTextString(m) }
func (*Agent) ProtoMessage()               {}
func (*Agent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Agent) GetType() AgentType {
	if m != nil {
		return m.Type
	}
	return AgentType_TELEGRAF
}

func (m *Agent) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type EnvoyInstruction struct {
	// Types that are valid to be assigned to Details:
	//	*EnvoyInstruction_Install
	//	*EnvoyInstruction_Configure
	//	*EnvoyInstruction_Refresh
	Details isEnvoyInstruction_Details `protobuf_oneof:"details"`
}

func (m *EnvoyInstruction) Reset()                    { *m = EnvoyInstruction{} }
func (m *EnvoyInstruction) String() string            { return proto.CompactTextString(m) }
func (*EnvoyInstruction) ProtoMessage()               {}
func (*EnvoyInstruction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type isEnvoyInstruction_Details interface {
	isEnvoyInstruction_Details()
}

type EnvoyInstruction_Install struct {
	Install *EnvoyInstructionInstall `protobuf:"bytes,1,opt,name=install,oneof"`
}
type EnvoyInstruction_Configure struct {
	Configure *EnvoyInstructionConfigure `protobuf:"bytes,2,opt,name=configure,oneof"`
}
type EnvoyInstruction_Refresh struct {
	Refresh *EnvoyInstructionRefresh `protobuf:"bytes,3,opt,name=refresh,oneof"`
}

func (*EnvoyInstruction_Install) isEnvoyInstruction_Details()   {}
func (*EnvoyInstruction_Configure) isEnvoyInstruction_Details() {}
func (*EnvoyInstruction_Refresh) isEnvoyInstruction_Details()   {}

func (m *EnvoyInstruction) GetDetails() isEnvoyInstruction_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *EnvoyInstruction) GetInstall() *EnvoyInstructionInstall {
	if x, ok := m.GetDetails().(*EnvoyInstruction_Install); ok {
		return x.Install
	}
	return nil
}

func (m *EnvoyInstruction) GetConfigure() *EnvoyInstructionConfigure {
	if x, ok := m.GetDetails().(*EnvoyInstruction_Configure); ok {
		return x.Configure
	}
	return nil
}

func (m *EnvoyInstruction) GetRefresh() *EnvoyInstructionRefresh {
	if x, ok := m.GetDetails().(*EnvoyInstruction_Refresh); ok {
		return x.Refresh
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*EnvoyInstruction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _EnvoyInstruction_OneofMarshaler, _EnvoyInstruction_OneofUnmarshaler, _EnvoyInstruction_OneofSizer, []interface{}{
		(*EnvoyInstruction_Install)(nil),
		(*EnvoyInstruction_Configure)(nil),
		(*EnvoyInstruction_Refresh)(nil),
	}
}

func _EnvoyInstruction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*EnvoyInstruction)
	// details
	switch x := m.Details.(type) {
	case *EnvoyInstruction_Install:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Install); err != nil {
			return err
		}
	case *EnvoyInstruction_Configure:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Configure); err != nil {
			return err
		}
	case *EnvoyInstruction_Refresh:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Refresh); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("EnvoyInstruction.Details has unexpected type %T", x)
	}
	return nil
}

func _EnvoyInstruction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*EnvoyInstruction)
	switch tag {
	case 1: // details.install
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EnvoyInstructionInstall)
		err := b.DecodeMessage(msg)
		m.Details = &EnvoyInstruction_Install{msg}
		return true, err
	case 2: // details.configure
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EnvoyInstructionConfigure)
		err := b.DecodeMessage(msg)
		m.Details = &EnvoyInstruction_Configure{msg}
		return true, err
	case 3: // details.refresh
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EnvoyInstructionRefresh)
		err := b.DecodeMessage(msg)
		m.Details = &EnvoyInstruction_Refresh{msg}
		return true, err
	default:
		return false, nil
	}
}

func _EnvoyInstruction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*EnvoyInstruction)
	// details
	switch x := m.Details.(type) {
	case *EnvoyInstruction_Install:
		s := proto.Size(x.Install)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *EnvoyInstruction_Configure:
		s := proto.Size(x.Configure)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *EnvoyInstruction_Refresh:
		s := proto.Size(x.Refresh)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type EnvoyInstructionInstall struct {
	Agent    *Agent `protobuf:"bytes,1,opt,name=agent" json:"agent,omitempty"`
	Url      string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Checksum string `protobuf:"bytes,3,opt,name=checksum" json:"checksum,omitempty"`
}

func (m *EnvoyInstructionInstall) Reset()                    { *m = EnvoyInstructionInstall{} }
func (m *EnvoyInstructionInstall) String() string            { return proto.CompactTextString(m) }
func (*EnvoyInstructionInstall) ProtoMessage()               {}
func (*EnvoyInstructionInstall) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *EnvoyInstructionInstall) GetAgent() *Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *EnvoyInstructionInstall) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *EnvoyInstructionInstall) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

type EnvoyInstructionConfigure struct {
	AgentType  AgentType          `protobuf:"varint,1,opt,name=agentType,enum=AgentType" json:"agentType,omitempty"`
	Operations []*ConfigurationOp `protobuf:"bytes,2,rep,name=operations" json:"operations,omitempty"`
}

func (m *EnvoyInstructionConfigure) Reset()                    { *m = EnvoyInstructionConfigure{} }
func (m *EnvoyInstructionConfigure) String() string            { return proto.CompactTextString(m) }
func (*EnvoyInstructionConfigure) ProtoMessage()               {}
func (*EnvoyInstructionConfigure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *EnvoyInstructionConfigure) GetAgentType() AgentType {
	if m != nil {
		return m.AgentType
	}
	return AgentType_TELEGRAF
}

func (m *EnvoyInstructionConfigure) GetOperations() []*ConfigurationOp {
	if m != nil {
		return m.Operations
	}
	return nil
}

type ConfigurationOp struct {
	Id       string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Revision string               `protobuf:"bytes,2,opt,name=revision" json:"revision,omitempty"`
	Type     ConfigurationOp_Type `protobuf:"varint,3,opt,name=type,enum=ConfigurationOp_Type" json:"type,omitempty"`
	Content  string               `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *ConfigurationOp) Reset()                    { *m = ConfigurationOp{} }
func (m *ConfigurationOp) String() string            { return proto.CompactTextString(m) }
func (*ConfigurationOp) ProtoMessage()               {}
func (*ConfigurationOp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ConfigurationOp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConfigurationOp) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

func (m *ConfigurationOp) GetType() ConfigurationOp_Type {
	if m != nil {
		return m.Type
	}
	return ConfigurationOp_MODIFY
}

func (m *ConfigurationOp) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// mainly used to test the ambassador->envoy liveness of the channel, but could eventually
// contain the full set of instructions of ensure consistency
type EnvoyInstructionRefresh struct {
}

func (m *EnvoyInstructionRefresh) Reset()                    { *m = EnvoyInstructionRefresh{} }
func (m *EnvoyInstructionRefresh) String() string            { return proto.CompactTextString(m) }
func (*EnvoyInstructionRefresh) ProtoMessage()               {}
func (*EnvoyInstructionRefresh) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type KeepAliveRequest struct {
	InstanceId string `protobuf:"bytes,1,opt,name=instanceId" json:"instanceId,omitempty"`
}

func (m *KeepAliveRequest) Reset()                    { *m = KeepAliveRequest{} }
func (m *KeepAliveRequest) String() string            { return proto.CompactTextString(m) }
func (*KeepAliveRequest) ProtoMessage()               {}
func (*KeepAliveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *KeepAliveRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type KeepAliveResponse struct {
}

func (m *KeepAliveResponse) Reset()                    { *m = KeepAliveResponse{} }
func (m *KeepAliveResponse) String() string            { return proto.CompactTextString(m) }
func (*KeepAliveResponse) ProtoMessage()               {}
func (*KeepAliveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func init() {
	proto.RegisterType((*EnvoySummary)(nil), "EnvoySummary")
	proto.RegisterType((*EnvoyModifications)(nil), "EnvoyModifications")
	proto.RegisterType((*ModifyEnvoyResponse)(nil), "ModifyEnvoyResponse")
	proto.RegisterType((*Agent)(nil), "Agent")
	proto.RegisterType((*EnvoyInstruction)(nil), "EnvoyInstruction")
	proto.RegisterType((*EnvoyInstructionInstall)(nil), "EnvoyInstructionInstall")
	proto.RegisterType((*EnvoyInstructionConfigure)(nil), "EnvoyInstructionConfigure")
	proto.RegisterType((*ConfigurationOp)(nil), "ConfigurationOp")
	proto.RegisterType((*EnvoyInstructionRefresh)(nil), "EnvoyInstructionRefresh")
	proto.RegisterType((*KeepAliveRequest)(nil), "KeepAliveRequest")
	proto.RegisterType((*KeepAliveResponse)(nil), "KeepAliveResponse")
	proto.RegisterEnum("AgentType", AgentType_name, AgentType_value)
	proto.RegisterEnum("ConfigurationOp_Type", ConfigurationOp_Type_name, ConfigurationOp_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TelemetryAmbassador service

type TelemetryAmbassadorClient interface {
	AttachEnvoy(ctx context.Context, in *EnvoySummary, opts ...grpc.CallOption) (TelemetryAmbassador_AttachEnvoyClient, error)
	ModifyEnvoy(ctx context.Context, in *EnvoyModifications, opts ...grpc.CallOption) (*ModifyEnvoyResponse, error)
	KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error)
}

type telemetryAmbassadorClient struct {
	cc *grpc.ClientConn
}

func NewTelemetryAmbassadorClient(cc *grpc.ClientConn) TelemetryAmbassadorClient {
	return &telemetryAmbassadorClient{cc}
}

func (c *telemetryAmbassadorClient) AttachEnvoy(ctx context.Context, in *EnvoySummary, opts ...grpc.CallOption) (TelemetryAmbassador_AttachEnvoyClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_TelemetryAmbassador_serviceDesc.Streams[0], c.cc, "/TelemetryAmbassador/AttachEnvoy", opts...)
	if err != nil {
		return nil, err
	}
	x := &telemetryAmbassadorAttachEnvoyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TelemetryAmbassador_AttachEnvoyClient interface {
	Recv() (*EnvoyInstruction, error)
	grpc.ClientStream
}

type telemetryAmbassadorAttachEnvoyClient struct {
	grpc.ClientStream
}

func (x *telemetryAmbassadorAttachEnvoyClient) Recv() (*EnvoyInstruction, error) {
	m := new(EnvoyInstruction)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *telemetryAmbassadorClient) ModifyEnvoy(ctx context.Context, in *EnvoyModifications, opts ...grpc.CallOption) (*ModifyEnvoyResponse, error) {
	out := new(ModifyEnvoyResponse)
	err := grpc.Invoke(ctx, "/TelemetryAmbassador/ModifyEnvoy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *telemetryAmbassadorClient) KeepAlive(ctx context.Context, in *KeepAliveRequest, opts ...grpc.CallOption) (*KeepAliveResponse, error) {
	out := new(KeepAliveResponse)
	err := grpc.Invoke(ctx, "/TelemetryAmbassador/KeepAlive", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TelemetryAmbassador service

type TelemetryAmbassadorServer interface {
	AttachEnvoy(*EnvoySummary, TelemetryAmbassador_AttachEnvoyServer) error
	ModifyEnvoy(context.Context, *EnvoyModifications) (*ModifyEnvoyResponse, error)
	KeepAlive(context.Context, *KeepAliveRequest) (*KeepAliveResponse, error)
}

func RegisterTelemetryAmbassadorServer(s *grpc.Server, srv TelemetryAmbassadorServer) {
	s.RegisterService(&_TelemetryAmbassador_serviceDesc, srv)
}

func _TelemetryAmbassador_AttachEnvoy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EnvoySummary)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TelemetryAmbassadorServer).AttachEnvoy(m, &telemetryAmbassadorAttachEnvoyServer{stream})
}

type TelemetryAmbassador_AttachEnvoyServer interface {
	Send(*EnvoyInstruction) error
	grpc.ServerStream
}

type telemetryAmbassadorAttachEnvoyServer struct {
	grpc.ServerStream
}

func (x *telemetryAmbassadorAttachEnvoyServer) Send(m *EnvoyInstruction) error {
	return x.ServerStream.SendMsg(m)
}

func _TelemetryAmbassador_ModifyEnvoy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnvoyModifications)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryAmbassadorServer).ModifyEnvoy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TelemetryAmbassador/ModifyEnvoy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryAmbassadorServer).ModifyEnvoy(ctx, req.(*EnvoyModifications))
	}
	return interceptor(ctx, in, info, handler)
}

func _TelemetryAmbassador_KeepAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeepAliveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TelemetryAmbassadorServer).KeepAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TelemetryAmbassador/KeepAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TelemetryAmbassadorServer).KeepAlive(ctx, req.(*KeepAliveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TelemetryAmbassador_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TelemetryAmbassador",
	HandlerType: (*TelemetryAmbassadorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ModifyEnvoy",
			Handler:    _TelemetryAmbassador_ModifyEnvoy_Handler,
		},
		{
			MethodName: "KeepAlive",
			Handler:    _TelemetryAmbassador_KeepAlive_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AttachEnvoy",
			Handler:       _TelemetryAmbassador_AttachEnvoy_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "telemetry-edge.proto",
}

func init() { proto.RegisterFile("telemetry-edge.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 678 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcd, 0x4e, 0xdb, 0x40,
	0x10, 0x8e, 0x93, 0x10, 0xc8, 0x84, 0x82, 0xd9, 0x80, 0x1a, 0xd2, 0x16, 0x21, 0x5f, 0x9a, 0x56,
	0xea, 0x8a, 0x06, 0x0e, 0x2d, 0xb7, 0xd0, 0x9a, 0x12, 0x15, 0x84, 0xe4, 0x46, 0x95, 0x7a, 0xa9,
	0xb4, 0xd8, 0x03, 0xac, 0xf0, 0x5f, 0x77, 0xd7, 0xa9, 0xfc, 0x3a, 0x7d, 0x8e, 0x5e, 0xfb, 0x36,
	0x7d, 0x88, 0xca, 0x6b, 0x3b, 0x38, 0x09, 0xa8, 0xb7, 0x9d, 0x99, 0x6f, 0x67, 0xbe, 0xf9, 0x66,
	0x76, 0x61, 0x5b, 0xa1, 0x8f, 0x01, 0x2a, 0x91, 0xbe, 0x41, 0xef, 0x06, 0x69, 0x2c, 0x22, 0x15,
	0x59, 0x7f, 0x0d, 0x58, 0xb7, 0xc3, 0x69, 0x94, 0x7e, 0x49, 0x82, 0x80, 0x89, 0x94, 0xf4, 0x60,
	0x75, 0x8a, 0x42, 0xf2, 0x28, 0xec, 0x19, 0xfb, 0xc6, 0xa0, 0xed, 0x94, 0x26, 0xd9, 0x03, 0xe0,
	0xa1, 0x54, 0x2c, 0x74, 0x71, 0xec, 0xf5, 0xea, 0x3a, 0x58, 0xf1, 0x90, 0x23, 0xd8, 0x94, 0x49,
	0x1c, 0x47, 0x42, 0xa1, 0x37, 0xba, 0xc1, 0x50, 0xc9, 0x5e, 0x63, 0xbf, 0x31, 0xd8, 0x18, 0x02,
	0xd5, 0xe6, 0x24, 0x8d, 0xd1, 0x59, 0x84, 0x90, 0xb7, 0xd0, 0xf2, 0xd9, 0x15, 0xfa, 0xb2, 0xd7,
	0xdc, 0x6f, 0x0c, 0x3a, 0xc3, 0x5d, 0x5a, 0xa5, 0x43, 0xcf, 0x75, 0xcc, 0x0e, 0x95, 0x48, 0x9d,
	0x02, 0xd8, 0x7f, 0x0f, 0x9d, 0x8a, 0x9b, 0x98, 0xd0, 0xb8, 0xc3, 0xb4, 0x60, 0x9b, 0x1d, 0xc9,
	0x36, 0xac, 0x4c, 0x99, 0x9f, 0x60, 0x41, 0x32, 0x37, 0x8e, 0xeb, 0xef, 0x0c, 0xeb, 0x3b, 0x10,
	0x9d, 0xfe, 0x22, 0xf2, 0xf8, 0x35, 0x77, 0x99, 0xe2, 0x51, 0x28, 0x17, 0x3a, 0x33, 0x96, 0x3a,
	0x1b, 0x40, 0x87, 0x79, 0xde, 0xac, 0xab, 0xba, 0x26, 0xda, 0xca, 0xbb, 0x72, 0xaa, 0x21, 0x6b,
	0x07, 0xba, 0x3a, 0x75, 0xaa, 0xab, 0x38, 0x28, 0xe3, 0x28, 0x94, 0x68, 0x8d, 0x60, 0x45, 0x03,
	0xc8, 0x1e, 0x34, 0x55, 0x1a, 0xa3, 0xae, 0x31, 0x2f, 0x8c, 0xf6, 0x57, 0xd5, 0xaf, 0xcf, 0xa9,
	0x6f, 0xfd, 0x31, 0xc0, 0xd4, 0x49, 0xc7, 0xa1, 0x54, 0x22, 0x71, 0x33, 0xe6, 0xe4, 0x08, 0x56,
	0x35, 0x4d, 0xdf, 0xd7, 0x19, 0x3b, 0xc3, 0x1e, 0x5d, 0xc4, 0x8c, 0xf3, 0xf8, 0x59, 0xcd, 0x29,
	0xa1, 0xe4, 0x18, 0xda, 0x6e, 0x14, 0x5e, 0xf3, 0x9b, 0x44, 0xe4, 0x12, 0x75, 0x86, 0xfd, 0xa5,
	0x7b, 0x1f, 0x4a, 0xc4, 0x59, 0xcd, 0xb9, 0x87, 0x67, 0x15, 0x05, 0x5e, 0x0b, 0x94, 0xb7, 0xbd,
	0xc6, 0x23, 0x15, 0x9d, 0x3c, 0x9e, 0x55, 0x2c, 0xa0, 0x27, 0x6d, 0x58, 0xf5, 0x50, 0x31, 0xee,
	0x4b, 0x0b, 0xe1, 0xe9, 0x23, 0x14, 0xc9, 0x73, 0x58, 0x61, 0x99, 0x1e, 0x45, 0x2f, 0xa5, 0xc0,
	0xb9, 0x33, 0x1b, 0x73, 0x22, 0xfc, 0x42, 0x96, 0xec, 0x48, 0xfa, 0xb0, 0xe6, 0xde, 0xa2, 0x7b,
	0x27, 0x93, 0x40, 0x93, 0x69, 0x3b, 0x33, 0xdb, 0xfa, 0x09, 0xbb, 0x8f, 0x76, 0x44, 0x06, 0xd0,
	0x66, 0xa5, 0xf0, 0x0f, 0x8c, 0xe2, 0x3e, 0x48, 0x0e, 0x00, 0xa2, 0x18, 0x45, 0xbe, 0x27, 0xc5,
	0xe0, 0x4d, 0x5a, 0x66, 0xd2, 0xee, 0xcb, 0xd8, 0xa9, 0x60, 0xac, 0x5f, 0x06, 0x6c, 0x2e, 0xc4,
	0xc9, 0x06, 0xd4, 0x79, 0xb9, 0x57, 0x75, 0xee, 0x65, 0xc4, 0x05, 0x4e, 0x79, 0x65, 0xcc, 0x33,
	0x9b, 0xbc, 0x2a, 0x36, 0xa4, 0xa1, 0x69, 0xed, 0x2c, 0xd6, 0xa2, 0xf3, 0xcb, 0xe2, 0x46, 0xa1,
	0xca, 0x14, 0x6b, 0xe6, 0xcb, 0x52, 0x98, 0xd6, 0x1e, 0x34, 0x35, 0x7d, 0x80, 0xd6, 0xc5, 0xe5,
	0xc7, 0xf1, 0xe9, 0x37, 0xb3, 0x96, 0x9d, 0x1d, 0xfb, 0xe2, 0xf2, 0xab, 0x6d, 0x1a, 0xd6, 0xee,
	0xf2, 0x10, 0x8a, 0xa9, 0x59, 0x43, 0x30, 0x3f, 0x23, 0xc6, 0x23, 0x9f, 0x4f, 0xd1, 0xc1, 0x1f,
	0x09, 0x4a, 0xf5, 0xbf, 0xf7, 0x61, 0x75, 0x61, 0xab, 0x72, 0x27, 0xdf, 0xf9, 0xd7, 0x2f, 0xa1,
	0x3d, 0x93, 0x94, 0xac, 0xc3, 0xda, 0xc4, 0x3e, 0xb7, 0x3f, 0x39, 0xa3, 0x53, 0xb3, 0x96, 0x59,
	0xa7, 0xe3, 0x73, 0xfb, 0xc4, 0x1e, 0x4d, 0x4c, 0x63, 0xf8, 0xdb, 0x80, 0xee, 0xa4, 0xfc, 0x9b,
	0x46, 0xc1, 0x15, 0x93, 0x92, 0x79, 0x91, 0x20, 0x87, 0xd0, 0x19, 0x29, 0xc5, 0xdc, 0x5b, 0x4d,
	0x95, 0x3c, 0x99, 0xfb, 0x18, 0xfa, 0x5b, 0x4b, 0x7b, 0x67, 0xd5, 0x0e, 0x0c, 0x72, 0x0c, 0x9d,
	0xca, 0x03, 0x24, 0x5d, 0xba, 0xfc, 0xdc, 0xfb, 0xdb, 0xf4, 0xa1, 0x37, 0x5a, 0x23, 0x47, 0xd0,
	0x9e, 0xb5, 0x41, 0xb6, 0xe8, 0xa2, 0x0c, 0x7d, 0x42, 0x97, 0xba, 0xb4, 0x6a, 0x27, 0x2f, 0xe0,
	0x99, 0x1b, 0x05, 0x54, 0x30, 0xf7, 0x4e, 0xc6, 0xcc, 0x45, 0x2a, 0x02, 0xce, 0xa9, 0x44, 0x31,
	0xe5, 0x2e, 0xca, 0xab, 0x96, 0xfe, 0x67, 0x0f, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xce, 0xcc,
	0x61, 0x15, 0x7f, 0x05, 0x00, 0x00,
}
